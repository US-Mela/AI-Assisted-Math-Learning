// Mocks generated by Mockito 5.4.4 from annotations
// in mela/test/unit/domain/question/submit_result_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mela/data/network/apis/questions/save_result_api.dart' as _i2;
import 'package:mela/domain/params/question/submit_result_params.dart' as _i4;
import 'package:mela/domain/usecase/user/logout_usecase.dart' as _i6;
import 'package:mela/domain/usecase/user_login/refresh_access_token_usecase.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SaveResultApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveResultApi extends _i1.Mock implements _i2.SaveResultApi {
  MockSaveResultApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> saveResult(
    _i4.SubmitResultParams? param,
    String? endpoint,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveResult,
          [
            param,
            endpoint,
          ],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}

/// A class which mocks [RefreshAccessTokenUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRefreshAccessTokenUsecase extends _i1.Mock
    implements _i5.RefreshAccessTokenUsecase {
  MockRefreshAccessTokenUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> call({required dynamic params}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [LogoutUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUseCase extends _i1.Mock implements _i6.LogoutUseCase {
  MockLogoutUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> call({required dynamic params}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
