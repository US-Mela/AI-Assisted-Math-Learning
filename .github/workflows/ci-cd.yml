name: CI/CD Pipeline

on:
  push:
    branches:
      - be-dev

jobs:
  build-backend-dev:
    runs-on: ubuntu-latest
    environment: Dev
    if: github.ref == 'refs/heads/be-dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: "17"

      - name: Set up environment variables from GitHub Secrets
        run: |
          echo "POSTGRESQL_DB_HOST=${{ secrets.POSTGRESQL_DB_HOST }}" >> $GITHUB_ENV
          echo "POSTGRESQL_DB_NAME=${{ secrets.POSTGRESQL_DB_NAME }}" >> $GITHUB_ENV
          echo "POSTGRESQL_DB_USERNAME=${{ secrets.POSTGRESQL_DB_USERNAME }}" >> $GITHUB_ENV
          echo "POSTGRESQL_DB_PASSWORD=${{ secrets.POSTGRESQL_DB_PASSWORD }}" >> $GITHUB_ENV
          echo "MONGODB_DB_CONNECTION_STRING=${{ secrets.MONGODB_DB_CONNECTION_STRING }}" >> $GITHUB_ENV
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> $GITHUB_ENV
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> $GITHUB_ENV
          echo "REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}" >> $GITHUB_ENV
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> $GITHUB_ENV
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> $GITHUB_ENV
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "JWT_FORGET_PASSWORD_SECRET_KEY=${{ secrets.JWT_FORGET_PASSWORD_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Build the Spring Boot application
        run: ./mvnw clean package -DskipTests

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/mela-app-dev:${{ github.sha }} -t ${{ secrets.DOCKER_HUB_USERNAME }}/mela-app-dev:latest .

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mela-app-dev:${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mela-app-dev:latest

  deploy-backend-dev:
    runs-on: ubuntu-latest
    needs: build-backend-dev
    if: github.ref == 'refs/heads/be-dev'
    environment: Dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Azure Web App (Dev) using publish profile
        uses: azure/webapps-deploy@v2
        with:
          app-name: mela-backend-dev 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          docker-image: ${{ secrets.DOCKER_HUB_USERNAME }}/mela-app-dev:latest
